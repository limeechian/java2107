/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package java2107;

/**
 *
 * @author Lim Ee Chian
 */


import java.awt.event.KeyEvent;
import java.io.FileReader;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.swing.table.DefaultTableModel;
import javax.swing.DefaultCellEditor;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.TableColumn;
import javax.swing.table.TableRowSorter;


public class RoomManagePage extends javax.swing.JFrame {
    private TableRowSorter<DefaultTableModel> originalSorter;
        
    public RoomManagePage() {
        initComponents();
        
        // Set the location of the JFrame form to be centered on the screen
        setLocationRelativeTo(null);
        
        loadRoomData();
        
        // set the table's cell editor to null - disable the cell editing functionality / non-editable - for double click usage
        tbManageRooms.setDefaultEditor(Object.class, null);   
        
        
        // Initialization code or data loading code
        DefaultTableModel model = (DefaultTableModel) tbManageRooms.getModel();
        originalSorter = new TableRowSorter<>(model);
        tbManageRooms.setRowSorter(originalSorter);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        tfRoomNumber = new javax.swing.JTextField();
        tfRoomFloor = new javax.swing.JTextField();
        tfRoomUnitPrice = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbManageRooms = new javax.swing.JTable();
        btnSave = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        btnSearch = new javax.swing.JButton();
        tfSearch = new javax.swing.JTextField();
        tfRoomStatus = new javax.swing.JTextField();
        btnRefresh = new javax.swing.JButton();

        setTitle("Serenity Sands Retreat Hotel Room Booking System");

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel3.setFont(new java.awt.Font("Mongolian Baiti", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(153, 0, 0));
        jLabel3.setText("Room ID");

        jLabel4.setFont(new java.awt.Font("Mongolian Baiti", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(153, 0, 0));
        jLabel4.setText("Room Floor");

        jLabel5.setFont(new java.awt.Font("Mongolian Baiti", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(153, 0, 0));
        jLabel5.setText("Room Status");

        jLabel6.setFont(new java.awt.Font("Mongolian Baiti", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(153, 0, 0));
        jLabel6.setText("Room Unit Price");

        tfRoomNumber.setEditable(false);

        tfRoomFloor.setEditable(false);

        tfRoomUnitPrice.setEditable(false);

        tbManageRooms.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tbManageRooms.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Room ID", "Room Floor", "Room Status", "Room Unit Price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbManageRooms.setGridColor(new java.awt.Color(255, 255, 255));
        tbManageRooms.setRowHeight(25);
        tbManageRooms.setSelectionBackground(new java.awt.Color(153, 0, 0));
        tbManageRooms.setSelectionForeground(new java.awt.Color(255, 255, 255));
        tbManageRooms.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbManageRoomsMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbManageRooms);

        btnSave.setBackground(new java.awt.Color(153, 0, 0));
        btnSave.setFont(new java.awt.Font("Mongolian Baiti", 1, 14)); // NOI18N
        btnSave.setForeground(new java.awt.Color(255, 255, 255));
        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(153, 0, 0));

        jLabel2.setFont(new java.awt.Font("Monotype Corsiva", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Hotel Room Booking System");

        jLabel1.setFont(new java.awt.Font("Monotype Corsiva", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Serenity Sands Retreat");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(271, 271, 271))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(250, 250, 250))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(16, 16, 16))
        );

        jLabel8.setFont(new java.awt.Font("Mongolian Baiti", 1, 24)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(153, 0, 0));
        jLabel8.setText("Manage Rooms");

        btnSearch.setBackground(new java.awt.Color(153, 0, 0));
        btnSearch.setFont(new java.awt.Font("Mongolian Baiti", 1, 14)); // NOI18N
        btnSearch.setForeground(new java.awt.Color(255, 255, 255));
        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        tfSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfSearchKeyTyped(evt);
            }
        });

        tfRoomStatus.setEditable(false);

        btnRefresh.setBackground(new java.awt.Color(153, 0, 0));
        btnRefresh.setFont(new java.awt.Font("Mongolian Baiti", 1, 14)); // NOI18N
        btnRefresh.setForeground(new java.awt.Color(255, 255, 255));
        btnRefresh.setText("Refresh");
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(tfRoomStatus, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 141, Short.MAX_VALUE)
                                .addComponent(tfRoomUnitPrice, javax.swing.GroupLayout.Alignment.LEADING))
                            .addComponent(tfRoomFloor, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tfRoomNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(56, 56, 56)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(tfSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnSearch)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnRefresh))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 538, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(285, 285, 285))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(17, 17, 17)
                .addComponent(jLabel8)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnRefresh, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(tfSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfRoomNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfRoomFloor, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfRoomStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfRoomUnitPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(37, 37, 37)
                        .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 399, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // Save button
        
        int selectedRow = tbManageRooms.getSelectedRow();
        if (selectedRow != -1) {  // Check if a row is selected
            // Get the modified data from the text fields
            String roomNumber = tfRoomNumber.getText();
            String roomFloor = tfRoomFloor.getText();
            String roomStatus = tfRoomStatus.getText();
            String roomUnitPrice = tfRoomUnitPrice.getText();            
            
            // Read the contents of the file and modify the specific line
            String filePath = "roomInfo.txt";
            File inputFile = new File(filePath);
            List<String> lines = new ArrayList<>();  
            boolean modified = false;  // Flag to track if the data is modified
            
            try (BufferedReader br = new BufferedReader(new FileReader(inputFile))) {
                String line;
                while ((line = br.readLine()) != null) { 
                    String[] rowInFile = line.split(":");
                    String existingRoomNumber = rowInFile[0].trim();
                    if (existingRoomNumber.equals(roomNumber)) {   
                        // Modify the data for the matching roomNumber
                        String[] rowModifyData = {existingRoomNumber,roomFloor,roomStatus,roomUnitPrice};
                        String rowMData = String.join(":", rowModifyData);
                        lines.add(rowMData);
                        modified = true;
                    } else {
                        lines.add(line);
                    }      
                }
            } catch (IOException e) {
                System.out.println("Error reading file: " + e.getMessage());            
            }
            
            // Write the modified contents back to the file if data is modified
            if (modified) {
                try (BufferedWriter bw = new BufferedWriter(new FileWriter(inputFile))) {  // Open the file in write mode            
                    for (String line : lines) {
                        bw.write(line);
                        bw.newLine();
                    }
                    JOptionPane.showMessageDialog(this, "Data saved successfully!");  
                } catch (IOException e) {
                    System.out.println("Error writing to file: " + e.getMessage());
                    JOptionPane.showMessageDialog(this, "Error saving data: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(this, "No matching room found with the given room number.", "Error", JOptionPane.ERROR_MESSAGE);
            }
            
            // Clear the tbManageRooms table
            DefaultTableModel model = (DefaultTableModel) tbManageRooms.getModel();
            model.setRowCount(0);
                
            // Read the data from the file and populate the tbManageRooms table
            try (BufferedReader br = new BufferedReader(new FileReader(inputFile))) {
                String line;
                while ((line = br.readLine()) != null) {
                    String[] rowInFile = line.split(":");
                    model.addRow(rowInFile);                            
                }                
            } catch (IOException e) {
                System.out.println("Error writing to file: " + e.getMessage());
                JOptionPane.showMessageDialog(this, "Error saving data: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            }
        
            // Clear the text fields
            tfRoomNumber.setText("");
            tfRoomFloor.setText("");
            tfRoomStatus.setText("");
            tfRoomUnitPrice.setText("");
        }
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        // Search button
        
        DefaultTableModel model = (DefaultTableModel) tbManageRooms.getModel();
        TableRowSorter<DefaultTableModel> searchSorter = new TableRowSorter<>(model);
        tbManageRooms.setRowSorter(searchSorter);
        searchSorter.setRowFilter(RowFilter.regexFilter(tfSearch.getText()));
    }//GEN-LAST:event_btnSearchActionPerformed

    private void tfSearchKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfSearchKeyTyped
        // Everytime the Enter key is pressed, an event is generated 
        
        if (evt.getKeyChar() == KeyEvent.VK_ENTER) {
            DefaultTableModel model = (DefaultTableModel) tbManageRooms.getModel();
            TableRowSorter<DefaultTableModel> searchSorter = new TableRowSorter<>(model);
            tbManageRooms.setRowSorter(searchSorter);
        
            String searchText = tfSearch.getText();
            searchSorter.setRowFilter(RowFilter.regexFilter(searchText));
        }
    }//GEN-LAST:event_tfSearchKeyTyped

    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
        // Refresh button
        
        // Refresh the table data
        tbManageRooms.setRowSorter(originalSorter);
    
        // Clear the search text field
        tfSearch.setText("");
        
        // Clear the text fields
        tfRoomNumber.setText("");
        tfRoomFloor.setText("");
        tfRoomStatus.setText("");
        tfRoomUnitPrice.setText("");
    }//GEN-LAST:event_btnRefreshActionPerformed

    private void tbManageRoomsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbManageRoomsMouseClicked
        // Select room by clicking the selected row
        
        if (evt.getClickCount() == 2) {
            int selectedRow = tbManageRooms.getSelectedRow();
            int modelRow = tbManageRooms.convertRowIndexToModel(selectedRow);
            
            if (modelRow != -1) {
                // Edit and set the modified values into the table fields - get the value from the selected row and display the values in the text fields
                tfRoomNumber.setText(tbManageRooms.getModel().getValueAt(modelRow,0).toString());
                tfRoomFloor.setText(tbManageRooms.getModel().getValueAt(modelRow,1).toString());
                tfRoomStatus.setText(tbManageRooms.getModel().getValueAt(modelRow,2).toString());
                tfRoomUnitPrice.setText(tbManageRooms.getModel().getValueAt(modelRow,3).toString());   
            }
        }
    }//GEN-LAST:event_tbManageRoomsMouseClicked

    private void loadRoomData() {
        // Load roomInfo.txt
       
        DefaultTableModel model = (DefaultTableModel) tbManageRooms.getModel();
        
        try {
            FileReader fr = new FileReader("roomInfo.txt");
            BufferedReader br = new BufferedReader(fr);
                        
            String line;

            while ((line = br.readLine()) != null) {
                String[] col = line.split(":");
                if (col.length >= 4) {
                    String roomNumber = col[0].trim();
                    String roomFloor = col[1].trim();
                    String roomStatus = col[2].trim();
                    String roomUnitPrice = col[3].trim();
                    
                    Object[] rowData = {roomNumber,roomFloor,roomStatus,roomUnitPrice};
                    model.addRow(rowData);   
                } else {
                    System.out.println("Invalid line: " + line);
                }     
            }
            br.close();

            // Initialization code or data loading code
            originalSorter = new TableRowSorter<>(model);
            tbManageRooms.setRowSorter(originalSorter);
        } catch (IOException e) {
            System.out.println("IOException occured during loading room data: " + e.getMessage());
        }
        // Combo Box in the table cell
        int columnIndex = 2;
        String[] statusOptions = {"Available", "Out of Service"};
        JComboBox<String> comboBox = new JComboBox<>(statusOptions);
        DefaultCellEditor cellEditor = new DefaultCellEditor(comboBox);
        TableColumn statusColumn = tbManageRooms.getColumnModel().getColumn(columnIndex);
        statusColumn.setCellEditor(cellEditor);
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RoomManagePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RoomManagePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RoomManagePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RoomManagePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RoomManagePage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnRefresh;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnSearch;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbManageRooms;
    private javax.swing.JTextField tfRoomFloor;
    private javax.swing.JTextField tfRoomNumber;
    private javax.swing.JTextField tfRoomStatus;
    private javax.swing.JTextField tfRoomUnitPrice;
    private javax.swing.JTextField tfSearch;
    // End of variables declaration//GEN-END:variables
}
